// Generated by github.com/davyxu/tabtoy
// Version: 2.9.0
// DO NOT EDIT!!
using System.Collections.Generic;

namespace gtmGame
{
	
	

	// Defined in table: SceneCfg
	
	public partial class SceneCfg
	{
	
		public tabtoy.Logger TableLogger = new tabtoy.Logger();
	
		
		/// <summary> 
		/// Scene
		/// </summary>
		public List<SceneDefine> Scene = new List<SceneDefine>(); 
	
	
		#region Index code
	 	Dictionary<string, SceneDefine> _SceneByName = new Dictionary<string, SceneDefine>();
        public SceneDefine GetSceneByName(string Name, SceneDefine def = default(SceneDefine))
        {
            SceneDefine ret;
            if ( _SceneByName.TryGetValue( Name, out ret ) )
            {
                return ret;
            }
			
			if ( def == default(SceneDefine) )
			{
				TableLogger.ErrorLine("GetSceneByName failed, Name: {0}", Name);
			}

            return def;
        }
		
		public string GetBuildID(){
			return "d41d8cd98f00b204e9800998ecf8427e";
		}
	
		#endregion
		#region Deserialize code
		
		static tabtoy.DeserializeHandler<SceneCfg> _SceneCfgDeserializeHandler;
		static tabtoy.DeserializeHandler<SceneCfg> SceneCfgDeserializeHandler
		{
			get
			{
				if (_SceneCfgDeserializeHandler == null )
				{
					_SceneCfgDeserializeHandler = new tabtoy.DeserializeHandler<SceneCfg>(Deserialize);
				}

				return _SceneCfgDeserializeHandler;
			}
		}
		public static void Deserialize( SceneCfg ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0xa0000:
                	{
						ins.Scene.Add( reader.ReadStruct<SceneDefine>(SceneDefineDeserializeHandler) );
                	}
                	break; 
                }
             } 

			
			// Build Scene Index
			for( int i = 0;i< ins.Scene.Count;i++)
			{
				var element = ins.Scene[i];
				
				ins._SceneByName.Add(element.Name, element);
				
			}
			
		}
		static tabtoy.DeserializeHandler<SceneDefine> _SceneDefineDeserializeHandler;
		static tabtoy.DeserializeHandler<SceneDefine> SceneDefineDeserializeHandler
		{
			get
			{
				if (_SceneDefineDeserializeHandler == null )
				{
					_SceneDefineDeserializeHandler = new tabtoy.DeserializeHandler<SceneDefine>(Deserialize);
				}

				return _SceneDefineDeserializeHandler;
			}
		}
		public static void Deserialize( SceneDefine ins, tabtoy.DataReader reader )
		{
			
 			int tag = -1;
            while ( -1 != (tag = reader.ReadTag()))
            {
                switch (tag)
                { 
                	case 0x60000:
                	{
						ins.Name = reader.ReadString();
                	}
                	break; 
                	case 0x60001:
                	{
						ins.Music = reader.ReadString();
                	}
                	break; 
                }
             } 

			
		}
		#endregion
	

	} 

	// Defined in table: Scene
	[System.Serializable]
	public partial class SceneDefine
	{
	
		
		/// <summary> 
		/// 场景名字
		/// </summary>
		public string Name = ""; 
		
		/// <summary> 
		/// 名称
		/// </summary>
		public string Music = ""; 
	
	

	} 

}
