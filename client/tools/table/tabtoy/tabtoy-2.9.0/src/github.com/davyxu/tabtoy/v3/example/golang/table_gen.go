// Generated by github.com/davyxu/tabtoy
// DO NOT EDIT!!
// Version: 3.0.0
package main

type ActorType int32

const (
	ActorType_None    = 0 //
	ActorType_Pharah  = 1 // 法鸡
	ActorType_Junkrat = 2 // 狂鼠
	ActorType_Genji   = 3 // 源氏
	ActorType_Mercy   = 4 // 天使
)

var (
	ActorTypeMapperValueByName = map[string]int32{
		"None":    0, //
		"Pharah":  1, // 法鸡
		"Junkrat": 2, // 狂鼠
		"Genji":   3, // 源氏
		"Mercy":   4, // 天使
	}

	ActorTypeMapperNameByValue = map[int32]string{
		0: "None",    //
		1: "Pharah",  // 法鸡
		2: "Junkrat", // 狂鼠
		3: "Genji",   // 源氏
		4: "Mercy",   // 天使
	}
)

type ExampleData struct {
	ID    int32     `tb_name:"任务ID"`
	Name  string    `tb_name:"名称"`
	Rate  float32   `tb_name:"比例"`
	Type  ActorType `tb_name:"类型"`
	Skill []int32   `tb_name:"技能列表"`
}

type ExampleKV struct {
	ServerIP   string  `tb_name:"服务器IP"`
	ServerPort uint16  `tb_name:"服务器端口"`
	GroupID    []int32 `tb_name:"分组"`
}

// Combine struct
type Table struct {
	ExampleData []*ExampleData // table: ExampleData
	ExampleKV   []*ExampleKV   // table: ExampleKV

	// Indices
	ExampleDataByID map[int32]*ExampleData `json:"-"` // table: ExampleData

	// Handlers
	postHandlers []func(*Table) `json:"-"`
	preHandlers  []func(*Table) `json:"-"`
}

// table: ExampleKV
func (self *Table) GetKeyValue_ExampleKV() *ExampleKV {
	return self.ExampleKV[0]
}

// 注册加载后回调(用于构建数据)
func (self *Table) RegisterPostEntry(h func(*Table)) {

	if h == nil {
		panic("empty postload handler")
	}

	self.postHandlers = append(self.postHandlers, h)
}

// 注册加载前回调(用于清除数据)
func (self *Table) RegisterPreEntry(h func(*Table)) {

	if h == nil {
		panic("empty preload handler")
	}

	self.preHandlers = append(self.preHandlers, h)
}

// 调用PreHander，清除索引和数据
func (self *Table) ResetData() {

	for _, h := range self.preHandlers {
		h(self)
	}

	self.ExampleData = self.ExampleData[0:0]
	self.ExampleKV = self.ExampleKV[0:0]

	self.ExampleDataByID = map[int32]*ExampleData{}
}

// 构建索引，调用PostHander
func (self *Table) BuildData() {

	for _, v := range self.ExampleData {
		self.ExampleDataByID[v.ID] = v
	}

	for _, h := range self.postHandlers {
		h(self)
	}
}

// 初始化表实例
func NewTable() *Table {

	self := &Table{}

	self.ResetData()

	return self
}
